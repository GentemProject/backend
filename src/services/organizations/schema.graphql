type Organization {
  id: ID
  ownersId: String
  causesId: [String]
  causes: [Cause]
  isPublished: Boolean
  name: String
  slug: String
  logo: String
  goal: String
  description: String
  useDonationsFor: String
  email: String
  phone: String
  website: String
  adminFullName: String
  adminEmail: String
  locations: [Location]
  socialMedia: [SocialMedia]
  donations: [Donations]
  sponsors: [Sponsors]
  createdAt: Date
  updatedAt: Date
}
type Location {
  address: String
  city: String
  state: String
  country: String
  countryCode: String
  coordenateX: Float
  coordenateY: Float
}
type SocialMedia {
  key: String
  name: String
  url: String
}
type Donations {
  key: String
  title: String
  description: String
}
type Sponsors {
  name: String
  imrg: String
  link: String
}

type OrganizationsPayload {
  count: Float
  rows: [Organization]
}
type Query {
  organizations(
    query: String
    page: Float
    limit: Float
    orderBy: String
    sortBy: String
    causesId: [String]
    countries: [String]
    hasDonationBank: Boolean
    hasDonationProducts: Boolean
    hasDonationLinks: Boolean
  ): OrganizationsPayload
  organization(id: String, slug: String): Organization
}
